name: Gradle Release Workflow

on:
  push:
    branches:
      - "development"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Retrieve Gradle version
        id: gradle_version
        run: ./gradlew properties -q | grep "version:" | awk '{print $2}'

      - name: Set release version
        run: echo "RELEASE_VERSION=$(cat gradle.properties | grep version= | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew build

      - name: Check if release exists
        id: check_release
        uses: octokit/request-action@v2.3.1
        with:
          route: GET /repos/:owner/:repo/releases/tags/v${{ env.RELEASE_VERSION }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update release
        id: create_release
        if: steps.check_release.outputs.status == '404'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing release
        if: steps.check_release.outputs.status != '404'
        run: |
          release_id=$(echo ${{ steps.check_release.outputs.data }} | jq -r '.id')
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/$release_id

      - name: Upload JAR to release
        if: steps.check_release.outputs.status == '404'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/
          asset_name: sdk-boost-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
